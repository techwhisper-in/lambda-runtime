pipeline:
  name: lambda-runtime
  identifier: lambdaruntime
  projectIdentifier: myfirstproject
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: Repo Clone
        identifier: repo_clone
        description: ""
        type: Custom
        variables:
          - name: github_connect_secret
            type: Secret
            required: true
            value: <+input>
          - name: aws_access_key
            type: Secret
            required: true
            value: <+input>
          - name: aws_secret_key
            type: Secret
            required: true
            value: <+input>
          - name: account_name
            type: String
            required: true
            value: <+input>
          - name: repo_name
            type: String
            required: true
            value: <+input>
          - name: branch_name
            type: String
            required: true
            value: <+input>
          - name: Role
            type: String
            required: true
            description: Assume role to access the resources
            value: <+input>
          - name: Region
            type: String
            required: true
            value: <+input>.default(us-east-1).allowedValues(us-east-1,us-east-2,ap-south-1)
          - name: Lambda_Functions
            type: String
            required: true
            description: Write "All" if action to be performed on all the lambda-functions
            value: <+input>.default(All)
        spec:
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: flush_cloned_repo
                  identifier: flush_cloned_repo
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: |
                          pwd
                          repo_name=<+stage.variables.repo_name>
                          echo "************** Flushing repository $repo_name if exist ******************"
                          rm -rf "$repo_name"
                          sleep 5s
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
              - step:
                  type: ShellScript
                  name: clone_repo
                  identifier: clone_repo
                  spec:
                    providerCredential:
                      type: Aws
                      spec:
                        connectorRef: connectawsaccount
                        region: ap-south-1
                        roleArn: ""
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: |
                          pwd
                          echo <+pipeline.stages.repo_clone.variables.aws_access_key>
                          echo <+pipeline.stages.repo_clone.variables.aws_secret_key>
                          export AWS_ACCESS_KEY_ID=<+pipeline.stages.repo_clone.variables.aws_access_key>>
                          export AWS_SECRET_ACCESS_KEY=<+pipeline.stages.repo_clone.variables.aws_secret_key>
                          aws s3 ls
                          export PYTHONUNBUFFERED=1
                          account_name=<+stage.variables.account_name>
                          repo_name=<+stage.variables.repo_name>
                          branch_name=<+pipeline.stages.repo_clone.variables.branch_name>
                          role_name=<+pipeline.stages.repo_clone.variables.Role>
                          aws_region=<+stage.variables.Region>
                          lambda_functions=<+stage.variables.Lambda_Functions>
                          echo "The below repository is being cloned:"
                          echo "Account Name: $account_name"
                          echo "Repository Name: $repo_name"
                          echo "Branch Name: $branch_name"
                          echo "Cloning....."
                          git clone --single-branch --branch $branch_name "https://<+stage.variables.github_connect_secret>@github.com/$account_name/$repo_name.git"                          
                          echo "Assume Role ARN: $role_name"
                          echo "AWS Region Input: $aws_region"
                          echo "Lambda Functions: $lamda_functions"
                          cd $repo_name
                          echo "Changing runtime of Lambda Functions........."
                          python3 change-runtime.py "$role_name" "$aws_region" "$lambda_functions"
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
              - step:
                  type: ShellScript
                  name: ShellScript_2
                  identifier: ShellScript_2
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: pwd
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
        tags: {}
